---
title: "Class 5 Data Visualization with ggplot2"
author: "Hannah Choi (PID: A17104764)"
format: pdf
---

## Using GGPLOT

The ggplot2 package needs to be installed as it does not come with R "out of the box".

We use the `install.packages()` function to do this.

```{r}
head(cars)
```
The `head()` function allows you to view the first 6 rows.
Need to load up ggplot in order to call any functions in the package. I do this with the `library()` function.

```{r}
library(ggplot2)
ggplot()
```
All ggplot figures have the following:
- data
+
- aesthetic mapping (aes vales)
+
- geoms

```{r}
ggplot(cars) +
  aes(x=speed, y=dist) +
  geom_point() +
  geom_smooth(method="lm", se=FALSE)
  labs(
    title="Speed and Stopping Distances of Cars",
       x="Speed (MPH)", 
       y="Stopping Distance (ft)",
       subtitle = "Class 05 BIMM 143",
       caption="Dataset: 'cars'") +
  theme_bw()
  
```
ggplot is not the only graphic systems, such as "base R" graphics.

```{r}
plot(cars)
```
ggplot is the default, base r is quicker but less aesthetically pleasing and does not have the geoms function (which allows customization for plots).

```{r}
url <- "https://bioboot.github.io/bimm143_S20/class-material/up_down_expression.txt"
genes <- read.delim(url)
head(genes)
nrow(genes)
colnames(genes)
table(genes$State)
round( table(genes$State)/nrow(genes) * 100, 2 )
```

```{r}
p <- ggplot(genes)+
  aes(x=Condition1, y=Condition2, col=State) +
  geom_point()
p + scale_colour_manual( values=c("blue","gray","red") ) +
  labs(
    title="Gene Expresion Changes Upon Drug Treatment",
    x="Control (no drug) ",
    y="Drug Treatment")
```

```{r}
library(dplyr)
library(gapminder)
gapminder_2007 <- gapminder %>% filter(year==2007)
colnames(gapminder_2007)
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp, color= continent, size= pop) +
  geom_point(alpha=0.5)
```

```{r}
ggplot(gapminder_2007) +
  aes(x=gdpPercap, y=lifeExp, size= pop) +
  geom_point(alpha=0.5) +
  scale_size_area(max_size=10)
```
alternate code for above could be:
ggplot(gapminder_2007) + 
  geom_point(aes(x = gdpPercap, y = lifeExp,
                 size = pop), alpha=0.5) + 
  scale_size_area(max_size = 10)
  ^^ can encapsulate aes() into geom_point()
```{r}
library(dplyr)

gapminder_1957 <- gapminder %>% filter(year==1957)
ggplot(gapminder_1957) +
  geom_point(aes(x=gdpPercap, y=lifeExp, color= continent, size = pop), alpha=0.7) +
  scale_size_area(0, 15)

```
  
